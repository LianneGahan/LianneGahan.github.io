{"ast":null,"code":"var _jsxFileName = \"/home/lainne-admin/Work/Dusseldorf/GroupWebsite/webserver/src/components/lignin_cards/dynamicGUIcard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Card, CardContent, Typography, Button, Box, Chip } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monolignolOptions = ['S', 'G', 'H'];\nconst bondOptions = ['B-O-4', 'B-B', 'B-5', '5-5', 'A-O-4', '4-O-5', 'B-1'];\nconst DynamicLigninBuilderCard = () => {\n  _s();\n  const [sequence, setSequence] = useState([]);\n  const [nextItem, setNextItem] = useState('monolignol'); // To track if the next item should be monolignol or bond\n\n  const addMonolignol = monolignol => {\n    if (nextItem === 'monolignol') {\n      setSequence([...sequence, {\n        type: 'monolignol',\n        value: monolignol\n      }]);\n      setNextItem('bond'); // Next should be a bond\n    } else {\n      console.log('Please add a bond before adding another monolignol.');\n    }\n  };\n  const addBond = bond => {\n    if (nextItem === 'bond' && sequence.length > 0 && sequence[sequence.length - 1].type === 'monolignol') {\n      setSequence([...sequence, {\n        type: 'bond',\n        value: bond\n      }]);\n      setNextItem('monolignol'); // Next should be a monolignol\n    } else {\n      console.log('Please add a monolignol before adding a bond.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      margin: 'auto',\n      marginTop: '2em'\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"div\",\n        gutterBottom: true,\n        children: \"Build Your Lignin Molecule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginBottom: '1em'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          children: \"Select Monolignol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: '1em',\n            marginTop: '0.5em'\n          },\n          children: monolignolOptions.map(monolignol => /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: () => addMonolignol(monolignol),\n            disabled: nextItem !== 'monolignol',\n            children: monolignol\n          }, monolignol, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginBottom: '1em'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          children: \"Select Bond\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: '1em',\n            flexWrap: 'wrap',\n            marginTop: '0.5em'\n          },\n          children: bondOptions.map(bond => /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"secondary\",\n            onClick: () => addBond(bond),\n            disabled: nextItem !== 'bond',\n            children: bond\n          }, bond, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: '1em'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          children: \"Lignin Molecule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: '0.5em',\n            marginTop: '1em'\n          },\n          children: sequence.map((item, index) => /*#__PURE__*/_jsxDEV(Chip, {\n            label: item.value,\n            color: item.type === 'monolignol' ? 'primary' : 'secondary'\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(DynamicLigninBuilderCard, \"6UaEpuUPvNWvb7ker4yolxoYxzg=\");\n_c = DynamicLigninBuilderCard;\nexport default DynamicLigninBuilderCard;\nvar _c;\n$RefreshReg$(_c, \"DynamicLigninBuilderCard\");","map":{"version":3,"names":["React","useState","Card","CardContent","Typography","Button","Box","Chip","monolignolOptions","bondOptions","DynamicLigninBuilderCard","sequence","setSequence","nextItem","setNextItem","addMonolignol","monolignol","type","value","console","log","addBond","bond","length","margin","marginTop","marginBottom","display","gap","map","flexWrap","item","index"],"sources":["/home/lainne-admin/Work/Dusseldorf/GroupWebsite/webserver/src/components/lignin_cards/dynamicGUIcard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Card, CardContent, Typography, Button, Box, Chip } from '@mui/material';\n\nconst monolignolOptions = ['S', 'G', 'H'];\nconst bondOptions = ['B-O-4', 'B-B', 'B-5', '5-5', 'A-O-4', '4-O-5', 'B-1'];\n\nconst DynamicLigninBuilderCard = () => {\n    const [sequence, setSequence] = useState([]);\n    const [nextItem, setNextItem] = useState('monolignol'); // To track if the next item should be monolignol or bond\n\n    const addMonolignol = (monolignol) => {\n        if (nextItem === 'monolignol') {\n            setSequence([...sequence, { type: 'monolignol', value: monolignol }]);\n            setNextItem('bond'); // Next should be a bond\n        } else {\n            console.log('Please add a bond before adding another monolignol.');\n        }\n    };\n\n    const addBond = (bond) => {\n        if (nextItem === 'bond' && sequence.length > 0 && sequence[sequence.length - 1].type === 'monolignol') {\n            setSequence([...sequence, { type: 'bond', value: bond }]);\n            setNextItem('monolignol'); // Next should be a monolignol\n        } else {\n            console.log('Please add a monolignol before adding a bond.');\n        }\n    };\n\n    return (\n        <Card sx={{ margin: 'auto', marginTop: '2em' }}>\n            <CardContent>\n                <Typography variant=\"h4\" component=\"div\" gutterBottom>\n                    Build Your Lignin Molecule\n                </Typography>\n\n                <Box sx={{ marginBottom: '1em' }}>\n                    <Typography variant=\"h6\" component=\"div\">\n                        Select Monolignol\n                    </Typography>\n                    <Box sx={{ display: 'flex', gap: '1em', marginTop: '0.5em' }}>\n                        {monolignolOptions.map((monolignol) => (\n                            <Button\n                                key={monolignol}\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => addMonolignol(monolignol)}\n                                disabled={nextItem !== 'monolignol'}\n                            >\n                                {monolignol}\n                            </Button>\n                        ))}\n                    </Box>\n                </Box>\n\n                <Box sx={{ marginBottom: '1em' }}>\n                    <Typography variant=\"h6\" component=\"div\">\n                        Select Bond\n                    </Typography>\n                    <Box sx={{ display: 'flex', gap: '1em', flexWrap: 'wrap', marginTop: '0.5em' }}>\n                        {bondOptions.map((bond) => (\n                            <Button\n                                key={bond}\n                                variant=\"outlined\"\n                                color=\"secondary\"\n                                onClick={() => addBond(bond)}\n                                disabled={nextItem !== 'bond'}\n                            >\n                                {bond}\n                            </Button>\n                        ))}\n                    </Box>\n                </Box>\n\n                <Box sx={{ marginTop: '1em' }}>\n                    <Typography variant=\"h6\" component=\"div\">\n                        Lignin Molecule\n                    </Typography>\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: '0.5em', marginTop: '1em' }}>\n                        {sequence.map((item, index) => (\n                            <Chip\n                                key={index}\n                                label={item.value}\n                                color={item.type === 'monolignol' ? 'primary' : 'secondary'}\n                            />\n                        ))}\n                    </Box>\n                </Box>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default DynamicLigninBuilderCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}