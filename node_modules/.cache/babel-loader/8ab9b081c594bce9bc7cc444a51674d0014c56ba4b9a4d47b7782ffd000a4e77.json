{"ast":null,"code":"var _jsxFileName = \"/home/lainne-admin/Work/Dusseldorf/GroupWebsite/webserver/src/components/lignin_cards/LigninFitInputCard.js\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport { Box, Button, Card, CardContent, TextField, Typography, Stack } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LigninBondCard = () => {\n  _s();\n  const [bonds, setBonds] = useState({\n    'β-O-4': '',\n    'β-β': '',\n    'β-5': '',\n    '5-5': '',\n    'α-O-4': '',\n    '4-O-5': '',\n    'β-1': ''\n  });\n  const [sgRatio, setSgRatio] = useState('');\n  const [dp, setDp] = useState('');\n  const [error, setError] = useState('');\n  const [imageUrl, setImageUrl] = useState(''); // State to store the image URL\n\n  const handleChange = e => {\n    setBonds({\n      ...bonds,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSimulation = async () => {\n    const totalPercentage = Object.values(bonds).reduce((acc, value) => acc + parseFloat(value || 0), 0);\n    if (totalPercentage !== 100) {\n      setError('The total percentage must equal 100.');\n      return;\n    }\n    if (sgRatio < 0 || sgRatio > 100) {\n      setError('SG Ratio must be between 0 and 100.');\n      return;\n    }\n    if (!/^\\d+(-\\d+)?$/.test(dp)) {\n      setError('DP must be a single number or a range (e.g., 5-10).');\n      return;\n    }\n    setError('');\n\n    // Prepare the payload for the backend\n    const payload = {\n      bonds,\n      sgRatio,\n      dp\n    };\n    try {\n      // Send the data to the backend\n      const response = await fetch('/api/run-simulation', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setImageUrl(data.imageUrl); // Assume the backend returns the URL of the generated image\n      } else {\n        const errorData = await response.json();\n        setError(errorData.message || 'An error occurred during simulation.');\n      }\n    } catch (error) {\n      setError('Failed to run the simulation. Please try again later.');\n    }\n  };\n  const handleReset = () => {\n    setBonds({\n      'β-O-4': '',\n      'β-β': '',\n      'β-5': '',\n      '5-5': '',\n      'α-O-4': '',\n      '4-O-5': '',\n      'β-1': ''\n    });\n    setSgRatio('');\n    setDp('');\n    setError('');\n    setImageUrl(''); // Reset the image URL as well\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      margin: 'auto',\n      marginTop: '2em',\n      padding: '1em',\n      boxShadow: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"div\",\n        gutterBottom: true,\n        children: \"Lignin Bond Simulation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        paragraph: true,\n        children: \"Enter the percentages for the 7 different lignin bonds. The total should be 100%.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        children: [Object.keys(bonds).map(bond => /*#__PURE__*/_jsxDEV(TextField, {\n          label: bond,\n          name: bond,\n          type: \"number\",\n          value: bonds[bond],\n          onChange: handleChange,\n          fullWidth: true,\n          inputProps: {\n            min: 0,\n            max: 100\n          },\n          variant: \"outlined\",\n          sx: {\n            marginBottom: '1em'\n          }\n        }, bond, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"SG Ratio\",\n          name: \"sgRatio\",\n          type: \"number\",\n          value: sgRatio,\n          onChange: e => setSgRatio(e.target.value),\n          fullWidth: true,\n          inputProps: {\n            min: 0,\n            max: 100\n          },\n          variant: \"outlined\",\n          sx: {\n            marginBottom: '1em'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"DP (Degree of Polymerization)\",\n          name: \"dp\",\n          type: \"text\",\n          value: dp,\n          onChange: e => setDp(e.target.value),\n          fullWidth: true,\n          variant: \"outlined\",\n          placeholder: \"e.g., 10 or 5-15\",\n          sx: {\n            marginBottom: '1em'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        variant: \"body2\",\n        sx: {\n          marginBottom: '1em'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        sx: {\n          marginTop: '1em'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleSimulation,\n          fullWidth: true,\n          children: \"Run Simulation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"secondary\",\n          onClick: handleReset,\n          fullWidth: true,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), imageUrl && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: '2em',\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageUrl,\n          alt: \"Simulation Result\",\n          style: {\n            maxWidth: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(LigninBondCard, \"YvX16p3O91OHlIfDMP0AgexlT/A=\");\n_c = LigninBondCard;\nexport default LigninBondCard;\nvar _c;\n$RefreshReg$(_c, \"LigninBondCard\");","map":{"version":3,"names":["React","Box","Button","Card","CardContent","TextField","Typography","Stack","useState","LigninBondCard","bonds","setBonds","sgRatio","setSgRatio","dp","setDp","error","setError","imageUrl","setImageUrl","handleChange","e","target","name","value","handleSimulation","totalPercentage","Object","values","reduce","acc","parseFloat","test","payload","response","fetch","method","headers","body","JSON","stringify","ok","data","json","errorData","message","handleReset","margin","marginTop","padding","boxShadow","keys","map","bond","min","max","marginBottom","textAlign","maxWidth"],"sources":["/home/lainne-admin/Work/Dusseldorf/GroupWebsite/webserver/src/components/lignin_cards/LigninFitInputCard.js"],"sourcesContent":["import * as React from \"react\";\nimport { Box, Button, Card, CardContent, TextField, Typography, Stack } from \"@mui/material\";\nimport { useState } from \"react\";\n\nconst LigninBondCard = () => {\n  const [bonds, setBonds] = useState({\n    'β-O-4': '',\n    'β-β': '',\n    'β-5': '',\n    '5-5': '',\n    'α-O-4': '',\n    '4-O-5': '',\n    'β-1': '',\n  });\n\n  const [sgRatio, setSgRatio] = useState('');\n  const [dp, setDp] = useState('');\n  const [error, setError] = useState('');\n  const [imageUrl, setImageUrl] = useState(''); // State to store the image URL\n\n  const handleChange = (e) => {\n    setBonds({\n      ...bonds,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSimulation = async () => {\n    const totalPercentage = Object.values(bonds).reduce((acc, value) => acc + parseFloat(value || 0), 0);\n    \n    if (totalPercentage !== 100) {\n      setError('The total percentage must equal 100.');\n      return;\n    }\n\n    if (sgRatio < 0 || sgRatio > 100) {\n      setError('SG Ratio must be between 0 and 100.');\n      return;\n    }\n\n    if (!/^\\d+(-\\d+)?$/.test(dp)) {\n      setError('DP must be a single number or a range (e.g., 5-10).');\n      return;\n    }\n\n    setError('');\n\n    // Prepare the payload for the backend\n    const payload = {\n      bonds,\n      sgRatio,\n      dp\n    };\n\n    try {\n      // Send the data to the backend\n      const response = await fetch('/api/run-simulation', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(payload),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setImageUrl(data.imageUrl); // Assume the backend returns the URL of the generated image\n      } else {\n        const errorData = await response.json();\n        setError(errorData.message || 'An error occurred during simulation.');\n      }\n    } catch (error) {\n      setError('Failed to run the simulation. Please try again later.');\n    }\n  };\n\n  const handleReset = () => {\n    setBonds({\n      'β-O-4': '',\n      'β-β': '',\n      'β-5': '',\n      '5-5': '',\n      'α-O-4': '',\n      '4-O-5': '',\n      'β-1': '',\n    });\n    setSgRatio('');\n    setDp('');\n    setError('');\n    setImageUrl(''); // Reset the image URL as well\n  };\n\n  return (\n    <Card sx={{margin: 'auto', marginTop: '2em', padding: '1em', boxShadow: 3 }}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"div\" gutterBottom>\n          Lignin Bond Simulation\n        </Typography>\n        <Typography variant=\"body1\" color=\"textSecondary\" paragraph>\n          Enter the percentages for the 7 different lignin bonds. The total should be 100%.\n        </Typography>\n        <Stack spacing={2}>\n          {Object.keys(bonds).map((bond) => (\n            <TextField\n              key={bond}\n              label={bond}\n              name={bond}\n              type=\"number\"\n              value={bonds[bond]}\n              onChange={handleChange}\n              fullWidth\n              inputProps={{ min: 0, max: 100 }}\n              variant=\"outlined\"\n              sx={{ marginBottom: '1em' }}\n            />\n          ))}\n          <TextField\n            label=\"SG Ratio\"\n            name=\"sgRatio\"\n            type=\"number\"\n            value={sgRatio}\n            onChange={(e) => setSgRatio(e.target.value)}\n            fullWidth\n            inputProps={{ min: 0, max: 100 }}\n            variant=\"outlined\"\n            sx={{ marginBottom: '1em' }}\n          />\n          <TextField\n            label=\"DP (Degree of Polymerization)\"\n            name=\"dp\"\n            type=\"text\"\n            value={dp}\n            onChange={(e) => setDp(e.target.value)}\n            fullWidth\n            variant=\"outlined\"\n            placeholder=\"e.g., 10 or 5-15\"\n            sx={{ marginBottom: '1em' }}\n          />\n        </Stack>\n        {error && (\n          <Typography color=\"error\" variant=\"body2\" sx={{ marginBottom: '1em' }}>\n            {error}\n          </Typography>\n        )}\n        <Stack spacing={2} sx={{ marginTop: '1em' }}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleSimulation}\n            fullWidth\n          >\n            Run Simulation\n          </Button>\n          <Button\n            variant=\"outlined\"\n            color=\"secondary\"\n            onClick={handleReset}\n            fullWidth\n          >\n            Reset\n          </Button>\n        </Stack>\n        {imageUrl && (\n          <Box sx={{ marginTop: '2em', textAlign: 'center' }}>\n            <img src={imageUrl} alt=\"Simulation Result\" style={{ maxWidth: '100%' }} />\n          </Box>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default LigninBondCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}